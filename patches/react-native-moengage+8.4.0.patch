diff --git a/node_modules/react-native-moengage/android/build.gradle b/node_modules/react-native-moengage/android/build.gradle
index b65ea58..eb9c003 100644
--- a/node_modules/react-native-moengage/android/build.gradle
+++ b/node_modules/react-native-moengage/android/build.gradle
@@ -1,5 +1,5 @@
 buildscript {
-  ext.kotlinVersion = '1.6.0'
+  ext.kotlinVersion = '1.6.20'
   repositories {
     google()
     mavenCentral()
diff --git a/node_modules/react-native-moengage/iOS/MoEReactBridge/MoEReactBridge.m b/node_modules/react-native-moengage/iOS/MoEReactBridge/MoEReactBridge.m
index 0bf1e38..91e98f7 100644
--- a/node_modules/react-native-moengage/iOS/MoEReactBridge/MoEReactBridge.m
+++ b/node_modules/react-native-moengage/iOS/MoEReactBridge/MoEReactBridge.m
@@ -131,6 +131,26 @@ -(void)emitEvent:(NSDictionary*)payloadDict{
 RCT_EXPORT_METHOD(registerForPushNotification)
 {
     [[MoEngagePluginBridge sharedInstance] registerForPush];
+    dispatch_async(dispatch_get_main_queue(), ^{
+        id<UIApplicationDelegate> appDelegate = [[UIApplication sharedApplication] delegate];
+        if ([appDelegate respondsToSelector:@selector(moEngageRegisterForRemoteNotifications)]) {
+          [appDelegate performSelector:@selector(moEngageRegisterForRemoteNotifications)];
+        }
+      });
+}
+
+#pragma mark- Deep Linking
+RCT_EXPORT_METHOD(getMoeDeeplink:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
+{
+    dispatch_async(dispatch_get_main_queue(), ^{
+        id<UIApplicationDelegate> appDelegate = [[UIApplication sharedApplication] delegate];
+        if ([appDelegate respondsToSelector:@selector(getMoeDeeplink)]) {
+          NSString *deeplink = [appDelegate performSelector:@selector(getMoeDeeplink)];
+          resolve(deeplink);
+        } else {
+          reject(@"-1", @"getMoeDeeplink not implemented", nil);
+        }
+      });
 }
 
 #pragma mark Show InApp
diff --git a/node_modules/react-native-moengage/src/index.ts b/node_modules/react-native-moengage/src/index.ts
index bc139d8..64d4b85 100644
--- a/node_modules/react-native-moengage/src/index.ts
+++ b/node_modules/react-native-moengage/src/index.ts
@@ -151,7 +151,6 @@ var ReactMoE = {
    */
   setAppStatus: function (status: MoEAppStatus) {
     commonValidationCheck();
-    console.log("Will track whether it is a fresh install or update.");
     let payload = getAppStatusJson(MoEHelper.appStatusToString(status),moeAppId);
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.setAppStatus(payload);
@@ -177,7 +176,6 @@ var ReactMoE = {
       return;
     }
 
-    console.log("trackEvent with properties", properties);    
    let payload= getMoEPropertiesJson(properties, eventName, moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -193,7 +191,6 @@ var ReactMoE = {
    */
   setUserUniqueID: function (uniqueId: string) {
     commonValidationCheck();
-    console.log("Will set unique ID: " + uniqueId);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_UNIQUE_ID,uniqueId,GENERAL,moeAppId)
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.setUserAttribute(payload);
@@ -208,7 +205,6 @@ var ReactMoE = {
    */
   setAlias: function (alias: string) {
     commonValidationCheck();
-    console.log("Will set alias: " + alias);
     let payload = getAliasJson(alias,moeAppId);
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.setAlias(payload);
@@ -223,7 +219,6 @@ var ReactMoE = {
    */
   setUserName: function (userName: string) {
     commonValidationCheck();
-    console.log("Will set username: " + userName);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_NAME,userName,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -239,7 +234,6 @@ var ReactMoE = {
    */
   setUserFirstName: function (firstName: string) {
     commonValidationCheck();
-    console.log("Will set first name: " + firstName);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_FIRST_NAME,firstName,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -255,7 +249,6 @@ var ReactMoE = {
    */
   setUserLastName: function (lastName: string) {
     commonValidationCheck();
-    console.log("Will set last name: " + lastName);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_LAST_NAME,lastName,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -271,7 +264,6 @@ var ReactMoE = {
    */
   setUserEmailID: function (emailId: string) {
     commonValidationCheck();
-    console.log("Will set email-id " + emailId);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_EMAIL,emailId,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -287,7 +279,6 @@ var ReactMoE = {
    */
   setUserContactNumber: function (mobileNumber: string) {
     commonValidationCheck();
-    console.log("Will set Mobile Number: " + mobileNumber);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_MOBILE,mobileNumber,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -303,7 +294,6 @@ var ReactMoE = {
    */
   setUserBirthday: function (birthday: string) {
     commonValidationCheck();
-    console.log("Will set birthday: " + birthday);
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_BDAY,birthday,TIMESTAMP,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -319,8 +309,6 @@ var ReactMoE = {
    */
   setUserGender: function (gender: Object) {
     commonValidationCheck();
-    console.log("Will set gender: " + gender);
-    
     const payload = getUserAttributeJson(USER_ATTRIBUTE_USER_GENDER,gender,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -356,12 +344,6 @@ var ReactMoE = {
    */
   setUserAttribute: function (userAttributeName: string, userAttributeValue: Object) {
     commonValidationCheck();
-    console.log(
-      "Will track user attribute [attributeName]: " +
-      userAttributeName +
-      " attributeValue: " +
-      userAttributeValue
-    );
     const payload = getUserAttributeJson(userAttributeName,userAttributeValue,GENERAL,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -420,7 +402,6 @@ var ReactMoE = {
    */
   logout: function () {
     commonValidationCheck();
-    console.log("Will logout user");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.logout(getAppIdJson(moeAppId));
     } else if (Platform.OS == PLATFORM_IOS) {
@@ -433,7 +414,6 @@ var ReactMoE = {
    */
   showInApp: function () {
     commonValidationCheck();
-    console.log("Will try to show in-app.");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.showInApp(getAppIdJson(moeAppId));
     } else if (Platform.OS == PLATFORM_IOS) {
@@ -553,7 +533,6 @@ var ReactMoE = {
    */
   passFcmPushToken: function (pushToken: string) {
     commonValidationCheck();
-    console.log("Will process push token");
     let payload = getMoEPushTokenJson(pushToken,PUSH_SERVICE_FCM,PLATFORM_ANDROID,moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -570,7 +549,6 @@ var ReactMoE = {
    */
   passFcmPushPayload: function (pushPayload: object) {
     commonValidationCheck();
-    console.log("Will process push payload.");
     let payload = getMoEPushCampaignJson(pushPayload,PUSH_SERVICE_FCM,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -585,7 +563,6 @@ var ReactMoE = {
    */
   registerForPush: function () {
     commonValidationCheck();
-    console.log("Will registerForPush");
     if (Platform.OS == PLATFORM_ANDROID) {
       console.log("This api is not supported on android platform.");
     } else if (Platform.OS == PLATFORM_IOS) {
@@ -598,7 +575,6 @@ var ReactMoE = {
    */
   disableInbox: function () {
     commonValidationCheck();
-    console.log("Will disableInbox");
     if (Platform.OS == PLATFORM_ANDROID) {
       console.log("This api is not supported on android platform.");
     } else if (Platform.OS == PLATFORM_IOS) {
@@ -618,7 +594,6 @@ var ReactMoE = {
   },
 
   optOutDataTracking: function (shouldOptOutDataTracking: boolean) {
-    console.log("Will opt out data tracking");
     let payload = getOptOutTrackingJson("data",shouldOptOutDataTracking,moeAppId);
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.optOutDataTracking(payload);
@@ -635,7 +610,6 @@ var ReactMoE = {
    */
   passPushKitPushToken: function (pushToken: string) {
     commonValidationCheck();
-    console.log("Will process push-kit push token");
     let payload = getMoEPushTokenJson(pushToken,PUSH_SERVICE_PUSH_KIT,PLATFORM_ANDROID,moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -646,7 +620,6 @@ var ReactMoE = {
   },
 
   enableSdk: function () {
-    console.log("Will enable SDK");
     let payload = getSdkStateJson(true,moeAppId)
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.updateSdkState(payload);
@@ -656,7 +629,6 @@ var ReactMoE = {
   },
 
   disableSdk: function () {
-    console.log("Will disable SDK");
     let payload = getSdkStateJson(false,moeAppId)
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -667,7 +639,6 @@ var ReactMoE = {
   },
 
   onOrientationChanged: function () {
-    console.log("Will process screen rotation.");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.onOrientationChanged();
     }
@@ -677,7 +648,6 @@ var ReactMoE = {
    * API to enable Advertising Id tracking for Android.
    */
   enableAdIdTracking: function () {
-    console.log("Will enable advertising-id tracking");
     let payload = getAdIdTrackingJson(true,moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -692,7 +662,6 @@ var ReactMoE = {
    * Advertising Id tracking at some point.
    */
   disableAdIdTracking: function () {
-    console.log("Will disable advertising-id tracking");
     let payload = getAdIdTrackingJson(false,moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -704,7 +673,6 @@ var ReactMoE = {
    * API to enable Android Id tracking for Android.
    */
   enableAndroidIdTracking: function () {
-    console.log("Will enable android-id tracking");
     let payload = getAndroidIdTrackingJson(true,moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -719,7 +687,6 @@ var ReactMoE = {
    * Advertising Id tracking at some point.
    */
   disableAndroidIdTracking: function () {
-    console.log("Will disable android-id tracking");
     let payload = getAndroidIdTrackingJson(false,moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -728,28 +695,24 @@ var ReactMoE = {
   },
 
   pushPermissionResponseAndroid: function (isGranted: boolean) {
-    console.log("Will track permission response");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.permissionResponse(isGranted, MoEngagePermissionType.PUSH)
     }
   },
 
   setupNotificationChannelsAndroid: function () {
-    console.log("Will setup notification");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.setupNotificationChannels();
     }
   },
 
   navigateToSettingsAndroid: function () {
-    console.log("Will navigate to settings");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.navigateToSettings();
     }
   },
 
   requestPushPermissionAndroid: function () {
-    console.log("Will request push permission.");
     if (Platform.OS == PLATFORM_ANDROID) {
       MoERNAndroid.requestPushPermission();
     }
@@ -762,7 +725,6 @@ var ReactMoE = {
    * @param {number} count - number of times push permission requested
    */
   updatePushPermissionRequestCountAndroid: function (count: number) {
-    console.log("Will increment push permission request count");
     let payload = getPushPermissionRequestCountJson(count, moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -776,7 +738,6 @@ var ReactMoE = {
    * Note: By default Device Id tracking is enabled
    */
   enableDeviceIdTracking: function () {
-    console.log("Will enable device id tracking");
     let payload = getDeviceIdTrackingJson(true, moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
@@ -788,7 +749,6 @@ var ReactMoE = {
    * API to disable Device Id tracking for Android.
    */
   disableDeviceIdTracking: function () {
-    console.log("Will disable device id tracking");
     let payload = getDeviceIdTrackingJson(false, moeAppId);
 
     if (Platform.OS == PLATFORM_ANDROID) {
