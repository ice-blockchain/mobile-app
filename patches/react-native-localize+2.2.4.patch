https://developer.android.com/reference/java/util/Locale#getCountry():
> Returns the country/region code for this locale, which should either be the empty string, an uppercase ISO 3166 2-letter code, or a UN M.49 3-digit code.
So getCountry might return an empty string and we need to be able to detect it instead of getting "US" for those cases 

diff --git a/node_modules/react-native-localize/android/src/main/java/com/zoontek/rnlocalize/RNLocalizeModule.java b/node_modules/react-native-localize/android/src/main/java/com/zoontek/rnlocalize/RNLocalizeModule.java
index 2eb8ae3..cea4c77 100644
--- a/node_modules/react-native-localize/android/src/main/java/com/zoontek/rnlocalize/RNLocalizeModule.java
+++ b/node_modules/react-native-localize/android/src/main/java/com/zoontek/rnlocalize/RNLocalizeModule.java
@@ -253,7 +253,7 @@ public class RNLocalizeModule extends ReactContextBaseJavaModule {
     String currentRegionCode = getRegionCode(currentLocale);
 
     if (TextUtils.isEmpty(currentRegionCode)) {
-      currentRegionCode = "US";
+      currentRegionCode = "";
     }
 
     List<String> languageTagsList = new ArrayList<>();
