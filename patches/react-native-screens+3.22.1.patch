diff --git a/node_modules/react-native-screens/ios/RNSScreenStack.mm b/node_modules/react-native-screens/ios/RNSScreenStack.mm
index e97011e..de630a3 100644
--- a/node_modules/react-native-screens/ios/RNSScreenStack.mm
+++ b/node_modules/react-native-screens/ios/RNSScreenStack.mm
@@ -24,6 +24,8 @@
 #import "RNSScreenStackHeaderConfig.h"
 #import "RNSScreenWindowTraits.h"
 
+#import "ReactNativePageView.h"
+
 @interface RNSScreenStackView () <
     UINavigationControllerDelegate,
     UIAdaptivePresentationControllerDelegate,
@@ -619,6 +621,10 @@ - (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer
 {
   RNSScreenView *topScreen = _reactSubviews.lastObject;
 
+  if ([gestureRecognizer isKindOfClass:[_controller.interactivePopGestureRecognizer class]]) {
+    return YES;
+  }
+
 #if TARGET_OS_TV
   [self cancelTouchesInParent];
   return YES;
@@ -662,6 +668,19 @@ - (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer
 #endif // TARGET_OS_TV
 }
 
+- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer {
+  if ([otherGestureRecognizer isKindOfClass: NSClassFromString(@"UIScrollViewPanGestureRecognizer")] && [otherGestureRecognizer.view.reactViewController isKindOfClass: [UIPageViewController class]]) {
+    UIPageViewController* pageController = otherGestureRecognizer.view.reactViewController;
+    if (pageController != nil && [pageController.delegate isKindOfClass:[ReactNativePageView class]]) {
+      ReactNativePageView* page = pageController.delegate;
+      if (page != nil && page.currentIndex == 0) {
+        return YES;
+      }
+    }
+  }
+  return NO;
+}
+
 #if !TARGET_OS_TV
 - (void)setupGestureHandlers
 {
