diff --git a/src/store/modules/Tokenomics/actions/index.ts b/src/store/modules/Tokenomics/actions/index.ts
index e86447e5..4985f498 100644
--- a/src/store/modules/Tokenomics/actions/index.ts
+++ b/src/store/modules/Tokenomics/actions/index.ts
@@ -44,11 +44,11 @@ const GET_BALANCE_HISTORY = createAction('GET_BALANCE_HISTORY', {
   START: (payload: {isInitial?: boolean; startDate: string; endDate: string}) =>
     payload,
   SUCCESS: (payload: {
-    isInitial?: boolean;
     startDate: string;
     endDate: string;
     hasNext: boolean;
     data: BalanceHistoryPoint[];
+    pageNumber: number;
   }) => payload,
   FAILED: (errorMessage: string) => ({errorMessage}),
 });
diff --git a/src/store/modules/Tokenomics/reducer/index.ts b/src/store/modules/Tokenomics/reducer/index.ts
index bdbc8740..5bd19df5 100644
--- a/src/store/modules/Tokenomics/reducer/index.ts
+++ b/src/store/modules/Tokenomics/reducer/index.ts
@@ -82,9 +82,8 @@ function reducer(state = INITIAL_STATE, action: Actions): State {
           action.payload.rankingSummary;
         break;
       case TokenomicsActions.GET_BALANCE_HISTORY.SUCCESS.type:
-        const {isInitial, startDate, endDate, hasNext, data} = action.payload;
-        const pageNumber = isInitial ? 0 : draft.balanceHistory.pageNumber + 1;
-        if (isInitial) {
+        const {startDate, endDate, hasNext, data, pageNumber} = action.payload;
+        if (pageNumber === 0) {
           draft.balanceHistory = {
             startDate,
             endDate,
diff --git a/src/store/modules/Tokenomics/sagas/getBalanceHistory.ts b/src/store/modules/Tokenomics/sagas/getBalanceHistory.ts
index 321799ab..d4d44001 100644
--- a/src/store/modules/Tokenomics/sagas/getBalanceHistory.ts
+++ b/src/store/modules/Tokenomics/sagas/getBalanceHistory.ts
@@ -23,6 +23,7 @@ export function* getBalanceHistorySaga({
     );
     const {pageNumber}: ReturnType<typeof balanceHistorySelector> =
       yield select(balanceHistorySelector);
+    const nextPageNumber = isInitial ? 0 : pageNumber + 1;
 
     if (isAuthorized) {
       const userId: ReturnType<typeof userIdSelector> = yield select(
@@ -32,7 +33,7 @@ export function* getBalanceHistorySaga({
       const data: SagaReturnType<typeof Api.tokenomics.getBalanceHistory> =
         yield call(Api.tokenomics.getBalanceHistory, {
           userId,
-          offset: isInitial ? 0 : pageNumber * PAGE_SIZE,
+          offset: nextPageNumber * PAGE_SIZE,
           startDate,
           endDate,
           limit: PAGE_SIZE,
@@ -41,7 +42,7 @@ export function* getBalanceHistorySaga({
 
       yield put(
         TokenomicsActions.GET_BALANCE_HISTORY.SUCCESS.create({
-          isInitial,
+          pageNumber: nextPageNumber,
           startDate,
           endDate,
           data,
